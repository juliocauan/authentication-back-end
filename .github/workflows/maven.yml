name: Java CI with Maven

on:
  push:
    branches: [ 'main', 'develop']
  pull_request:
    branches: [ 'main', 'develop' ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
        submodules: recursive
      
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'
        cache: maven

    - name: Build Database
      run: docker compose -f "docker-compose-test.yml" up -d --build
    
    - name: Test and Package with Maven
      run: mvn -B package --file pom.xml
    
    - name: Cache .JAR
      uses: actions/cache/save@v3
      with:
        path: './target/authentication-*.jar'
        key: ${{ runner.os }}-jar-${{ hashFiles('**/authentication-*.jar') }}

    - name: Cache Dockerfile
      uses: actions/cache/save@v3
      with:
        path: './Dockerfile'
        key: ${{ runner.os }}-dockerfile-${{ hashFiles('./Dockerfile') }}

    - name: Cache Authentication
      uses: actions/cache/save@v3
      with:
        path: './target/**'
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
    
  codeql-analysis:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Restore Cache Authentication
      uses: actions/cache/restore@v3
      with:
        path: '.'
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

    - name: Debug Output
      run: ls -R .

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: java-kotlin
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:java-kotlin"
  
  vulnerabilities:
    uses: ./.github/workflows/vulnerabilities.yml

  docker:
    needs: [ 'build', 'vulnerabilities' ]
    uses: ./.github/workflows/docker.yml
    secrets: inherit
